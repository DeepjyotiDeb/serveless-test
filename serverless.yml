org: deepjyotideb
console: true
service: user
useDotenv: true

# frameworkVersion: ">=1.2.0 <2.0.0"
# frameworkVersion: '^3'
package:
  individually: true
  excludeDevDependencies: true

plugins:
  - serverless-dotenv-plugin
  - serverless-bundle
  - serverless-offline

custom:
  # secrets: ${file(.env.${sls:stage, self:provider.stage, 'dev'})}
  serverless-offline:
    httpPort: 4000

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  profile: ${env:PROFILE}
  region: ${env:REGION}
  memorySize: 128
  timeout: 30

functions:
  verify-token:
    handler: services/verifyToken.auth

  loginUser:
    handler: services/user.login
    events:
      - http:
          path: /login
          method: POST
          cors: true
  createUser:
    handler: services/user.signup
    events:
      - http:
          path: /signup
          method: POST
          cors: true
  getUser:
    handler: services/user.getUsers
    events:
      - http:
          path: /getuser
          method: get
          cors: true
          authorizer:
            name: verify-token

  getBlogs:
    handler: services/blog.getBlogs
    events:
      - http:
          path: /getblogs
          method: get
          cors: true

  createBlog:
    handler: services/blog.createBlog
    events:
      - http:
          path: /createBlog
          method: post
          cors: true
          authorizer:
            name: verify-token
  findByuser:
    handler: services/blog.findByUser
    events:
      - http:
          path: /blogsByUser
          method: post
          cors: true
          authorizer:
            name: verify-token
  getBlog:
    handler: services/blog.getBlog
    events:
      - http:
          path: /blogs/{id}
          method: get
          cors: true
  searchBlog:
    handler: services/blog.getSearchResult
    events:
      - http:
          path: /search/{id}
          method: get
          cors: true

  updateBlog:
    handler: services/blog.updateBlog
    events:
      - http:
          path: /blog/{id}/update
          method: patch
          cors: true
          authorizer:
            name: verify-token
  deleteBlog:
    handler: services/blog.deleteBlog
    events:
      - http:
          path: /blog/{id}/delete
          method: delete
          cors: true
          authorizer:
            name: verify-token

resources:
  - ${file(resources/api-gateway-errors.yml)}
